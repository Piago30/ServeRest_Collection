{
	"info": {
		"_postman_id": "92211565-2d3f-4265-a7a3-dbcac90c4e58",
		"name": "ServeRest",
		"description": "**O ServeRest é uma API REST gratuita que simula uma loja virtual com intuito de servir de material de estudos de testes de API.**\n\n**Não deixe de seguir o [autor do projeto](https://github.com/PauloGoncalvesBH) e deixar um star no repositório: [github.com/ServeRest/ServeRest](https://github.com/ServeRest/ServeRest)**\n\nEssa página documenta todas as rotas e como acessá-las. Para mais detalhes do ServeRest (como executar localmente utilizando Docker ou NPM, alterar timeout de autenticação, etc) acesse [o repositório do ServeRest](https://github.com/serverest/serverest).\n\nEstá utilizando Postman? Importe o [JSON do Swagger](https://raw.githubusercontent.com/ServeRest/ServeRest/trunk/docs/swagger.json) para ter acesso às collections.\n\nVai fazer teste de carga? Leia a seção '[Teste de Carga](https://github.com/ServeRest/ServeRest#teste-de-carga)'.\n\n\nMuito obrigado ♥ a todos que apoiam o projeto [financeiramente](https://opencollective.com/serverest#section-contributors) ou [com código, ideias e divulgação](https://github.com/ServeRest/ServeRest#contribuidores-), graças a vocês **mais de R$ 2000,00 foram doados para a ONG [Todas as letras](https://todasasletras.org/)** até o momento.\n\nO ServeRest possui um front, com status em beta, não deixe de conhecer: [front.serverest.dev](https://front.serverest.dev).\n\nPrecisa de apoio? [Abra uma issue](https://github.com/ServeRest/ServeRest/issues) ou contate o mantenedor do projeto:\n\n\nContact Support:\n Name: Paulo Gonçalves",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27167795",
		"_collection_link": "https://orange-shuttle-794017.postman.co/workspace/ServeRest~ebed829d-98dd-4bad-ae8b-9261de13a2bb/collection/27167795-92211565-2d3f-4265-a7a3-dbcac90c4e58?action=share&source=collection_link&creator=27167795"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Log in",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"//pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
									"\r",
									"//pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var token = pm.response.json().authorization; \r",
									" \r",
									"    pm.environment.set(\"token\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"fulano@qa.com\",\n    \"password\": \"teste\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"login"
							]
						},
						"description": "A duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized).\n"
					},
					"response": []
				},
				{
					"name": "Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/usuarios",
							"host": [
								"{{URL}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "{_id}",
					"item": [
						{
							"name": "Buscar usuário por ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/usuarios/n1Z0xvh1Wos9k8ED",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"n1Z0xvh1Wos9k8ED"
									]
								}
							},
							"response": [
								{
									"name": "Usuário encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"false\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Usuário não encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Excluir usuário",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/usuarios/zEkYfgslPMKv1QbJ",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"zEkYfgslPMKv1QbJ"
									]
								},
								"description": "Não é permitido excluir usuário com carrinho."
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Nenhum registro excluído",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Usuário com carrinho cadastrado",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"idCarrinho\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Editar usuário",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"ciclano\",\n    \"email\": \"ciclano1@qa.com\",\n    \"password\": \"teste11\",\n    \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/y0GEhIPgPe0v5mlA",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"y0GEhIPgPe0v5mlA"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
							},
							"response": [
								{
									"name": "Alterado com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "ID_automatic",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test (\"Status code is 201\", function(){\r",
											"pm.response.to.have.status(201);\r",
											"\r",
											"})\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"\r",
											"let postId = responseJson._id;\r",
											"\r",
											"pm.environment.set(\"id\", postId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"Eliton\",\r\n    \"email\": \"teste4@teste.com\",\r\n    \"password\": \"123456abc\",\r\n    \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Manuals (names)",
					"item": [
						{
							"name": "Listar usuários cadastrados",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"response": [
								{
									"name": "Lista de usuários",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usuarios?_id=<string>&nome=<string>&email=<string>&password=<string>&administrador=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											],
											"query": [
												{
													"key": "_id",
													"value": "<string>"
												},
												{
													"key": "nome",
													"value": "<string>"
												},
												{
													"key": "email",
													"value": "<string>"
												},
												{
													"key": "password",
													"value": "<string>"
												},
												{
													"key": "administrador",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"quantidade\": \"<number>\",\n  \"usuarios\": [\n    {\n      \"nome\": \"<string>\",\n      \"email\": \"<string>\",\n      \"password\": \"<string>\",\n      \"administrador\": \"false\",\n      \"_id\": \"<string>\"\n    },\n    {\n      \"nome\": \"<string>\",\n      \"email\": \"<string>\",\n      \"password\": \"<string>\",\n      \"administrador\": \"false\",\n      \"_id\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Register user - success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
											"\r",
											"pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))\r",
											"\r",
											"let administrator = true\r",
											"\r",
											"pm.environment.set(\"administrador\", administrator);\r",
											"\r",
											"function firstName() {\r",
											"\r",
											"var firstName = [\"Helena\", \"Alice\", \"Laura\", \"Maria Alice\", \"Sophia\", \"Manuela\", \"Maitê\", \"Liz\", \"Cecília\", \"Isabella\", \"Luísa\", \"Eloá\", \"Heloísa\", \"Júlia\", \"Ayla\", \"Maria Luísa\", \"Isis\", \"Elisa\", \"Antonella\", \"Valentina\", \"Maya\", \"Maria Júlia\", \"Aurora\", \"Lara\", \"Maria Clara\", \"Lívia\", \"Esther\", \"Giovanna\", \"Sarah\", \"Maria Cecília\", \"Lorena\", \"Beatriz\", \"Rebecca\", \"Luna\", \"Olívia\", \"Maria Helena\", \"Mariana\", \"Isadora\", \"Melissa\", \"Maria\", \"Catarina\", \"Lavínia\", \"Alícia\", \"Maria Eduarda\", \"Agatha\", \"Ana Liz\", \"Yasmin\", \"Emanuelly\", \"Ana Clara\", \"Clara\", \"Ana Júlia\", \"Marina\", \"Stella\", \"Jade\", \"Maria Liz\", \"Ana Laura\", \"Maria Isis\", \"Ana Luísa\", \"Gabriela\", \"Alana\", \"Rafaela\", \"Vitória\", \"Isabelly\", \"Bella\", \"Milena\", \"Clarice\", \"Mirella\", \"Ana\", \"Emilly\", \"Betina\", \"Mariah\", \"Zoe\", \"Maria Vitória\", \"Nicole\", \"Laís\", \"Melina\", \"Bianca\", \"Louise\", \"Ana Beatriz\", \"Heloíse\", \"Malu\", \"Melinda\", \"Letícia\", \"Maria Valentina\", \"Chloe\", \"Maria Elisa\", \"Maria Heloísa\", \"Maria Laura\", \"Maria Fernanda\", \"Ana Cecília\", \"Hadassa\", \"Ana Vitória\", \"Diana\", \"Ayla Sophia\", \"Eduarda\", \"Ana Lívia\", \"Isabel\", \"Elis\", \"Pérola\", \"Joana\", \"Miguel\", \"Arthur\", \"Gael\", \"Théo\", \"Heitor\", \"Ravi\", \"Davi\", \"Bernardo\", \"Noah\", \"Gabriel\", \"Samuel\", \"Pedro\", \"Anthony\", \"Isaac\", \"Benício\", \"Benjamin\", \"Matheus\", \"Lucas\", \"Joaquim\", \"Nicolas\", \"Lucca\", \"Lorenzo\", \"Henrique\", \"João Miguel\", \"Rafael\", \"Henry\", \"Murilo\", \"Levi\", \"Guilherme\", \"Vicente\", \"Felipe\", \"Bryan\", \"Matteo\", \"Bento\", \"João Pedro\", \"Pietro\", \"Leonardo\", \"Daniel\", \"Gustavo\", \"Pedro Henrique\", \"João Lucas\", \"Emanuel\", \"João\", \"Caleb\", \"Davi Lucca\", \"Antônio\", \"Eduardo\", \"Enrico\", \"Caio\", \"José\", \"Enzo Gabriel\", \"Augusto\", \"Mathias\", \"Vitor\", \"Enzo\", \"Cauã\", \"Francisco\", \"Rael\", \"João Guilherme\", \"Thomas\", \"Yuri\", \"Yan\", \"Anthony Gabriel\", \"Oliver\", \"Otávio\", \"João Gabriel\", \"Nathan\", \"Davi Lucas\", \"Vinícius\", \"Theodoro\", \"Valentim\", \"Ryan\", \"Luiz Miguel\", \"Arthur Miguel\", \"João Vitor\", \"Léo\", \"Ravi Lucca\", \"Apollo\", \"Thiago\", \"Tomás\", \"Martin\", \"José Miguel\", \"Erick\", \"Liam\", \"Josué\", \"Luan\", \"Asafe\", \"Raul\", \"José Pedro\", \"Dominic\", \"Kauê\", \"Kalel\", \"Luiz Henrique\", \"Dom\", \"Davi Miguel\", \"Estevão\", \"Breno\", \"Davi Luiz\", \"Thales\", \"Israel\"];\r",
											"\r",
											"\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FirstName\", firstName());\r",
											"\r",
											"function lastName() {\r",
											"\r",
											"    var lastName = [\"Abreu\",\"Adães\",\"Adorno\",\"Aguiar\",\"Albuquerque\",\"Alcântara\",\"Aleluia\",\"Alencar\",\"Almeida\",\"Altamirano\",\"Alvarenga\",\"Álvares\",\"Alves\",\"Alvim\",\"Amaral\",\"Amigo\",\"Amor\",\"Amorim\",\"Anchieta\",\"Andrada\",\"Andrade\",\"André\",\"Andrioli\",\"Anes\",\"Anjos\",\"Antônio\",\"Antunes\",\"Anunciação\",\"Apolinário\",\"Aragão\",\"Araújo\",\"Arruda\",\"Ascensão\",\"Assis\",\"Auth\",\"Ayala\",\"Azeredo\",\"Azevedo\",\"Badu\",\"Baltar\",\"Baltazar\",\"Bandeira\",\"Barbaresco\",\"Barbosa\",\"Barreto\",\"Barros\",\"Barroso\",\"Baseggio\",\"Bastos\",\"Batista\",\"Bazarelo\",\"Beckmann\",\"Benjamin\",\"Bermudes\",\"Bernades\",\"Bernardes\",\"Bicalho\",\"Bispo\",\"Bizzo\",\"Bocaiuva\",\"Bolsonaro\",\"Borba\",\"Borborema\",\"Borges\",\"Borsoi\",\"Botelho\",\"Braga\",\"Bragança\",\"Brandão\",\"Brasil\",\"Brasiliense\",\"Brito\",\"Bruno\",\"Bruscato\",\"Bueno\",\"Cabral\",\"Café\",\"Caldas\",\"Camacho\",\"Camargo\",\"Caminha\",\"Camões\",\"Cândido\",\"Cardoso\",\"Carmo\",\"Carnaval\",\"Carneiro\",\"Carvalhal\",\"Carvalho\",\"Carvalhosa\",\"Castilho\",\"Castro\",\"Cauduro\",\"Cerejeira\",\"Chaves\",\"Cidade\",\"Coelho\",\"Coentrão\",\"Coimbra\",\"Conceição\",\"Constante\",\"Cordeiro\",\"Costa\",\"Cotrim\",\"Coutinho\",\"Couto\",\"Cruz\",\"Cunha\",\"Curado\",\"Curtinaz\",\"Dambros\",\"Dantas\",\"Delfino\",\"Dias\",\"Diegues\",\"Domingues\",\"Dominici\",\"Dorneles\",\"Dourado\",\"Duarte\",\"Dutra\",\"Eça\",\"Encarnação\",\"Esteves\",\"Evangelista\",\"Exaltação\",\"Fagundes\",\"Faleiros\",\"Falópio\",\"Falqueto\",\"Faria\",\"Farias\",\"Faro\",\"Feitosa\",\"Fernandes\",\"Ferrão\",\"Ferraz\",\"Ferreira\",\"Ferro\",\"Ferrolho\",\"Figo\",\"Figueira\",\"Figueiredo\",\"Figueiroa\",\"Fioravante\",\"Flores\",\"Fonseca\",\"Fontes\",\"Fortaleza\",\"França\",\"Freire\",\"Freitas\",\"Frota\",\"Furquim\",\"Furtado\",\"Gaia\",\"Galvão\",\"Gama\",\"Garcia\",\"Garrastazu\",\"Gato\",\"Generoso\",\"Gomes\",\"Gonçales\",\"Gonçalves\",\"Gonzaga\",\"Gouveia\",\"Guarato\",\"Guerreiro\",\"Guimarães\",\"Gusmão\",\"Henriques\",\"Hernandes\",\"Hidelfonso\",\"Hoffmann\",\"Holanda\",\"Homem\",\"Hora\",\"Hungria\",\"Idelfonso\",\"Igrejas\",\"Ildefonso\",\"Inácio\",\"Jardim\",\"Jesus\",\"Jordão\",\"Junqueira\",\"Klein\",\"Kremer\",\"Lacerda\",\"Lange\",\"Laubert\",\"Leitão\",\"Leite\",\"Leme\",\"Leonor\",\"Levy\",\"Libânio\",\"Lima\",\"Lins\",\"Lira\",\"Lisboa\",\"Locatelli\",\"Lochner\",\"Lopes\",\"Louzada\",\"Lutz\",\"Luz\",\"Macedo\",\"Machado\",\"Madureira\",\"Maduro\",\"Magalhães\",\"Mairinque\",\"Malafaia\",\"Malta\",\"Marinho\",\"Mariz\",\"Marques\",\"Martins\",\"Mascarenhas\",\"Massa\",\"Matos\",\"Maurício\",\"Medeiros\",\"Médici\",\"Meireles\",\"Mello\",\"Melo\",\"Mendes\",\"Mendonça\",\"Menezes\",\"Menino\"];\r",
											"\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"LastName\", lastName());\r",
											"\r",
											"pm.environment.set(\"nome\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										""
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user -  theFieldMustBe_a_string",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = [1, 2];\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user -  repeated name success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"Pedro I\",\n    \"email\": \"piago110@qa.com\",\n    \"password\": \"teste9\",\n    \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - null name field",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": null,\n    \"email\": \"piag@qa.com\",\n    \"password\": \"teste9\",\n    \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - empty name field",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"\",\n    \"email\": \"piag@qa.com\",\n    \"password\": \"teste9\",\n    \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - name field accepts special characters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"!@#$%&¨*()+{}^^:?/?]ª/*-*/+\",\n    \"email\": \"piag012@qa.com\",\n    \"password\": \"teste9\",\n    \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - name field accepts more than 2.815 characters",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"rymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvr\",\n    \"email\": \"piago123@qa.com\",\n    \"password\": \"teste9\",\n    \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - success Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))\r",
											"\r",
											"pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))\r",
											"\r",
											"let administrator = true\r",
											"\r",
											"pm.environment.set(\"administrador\", administrator);\r",
											"\r",
											"function firstName() {\r",
											"\r",
											"var firstName = [\"Helena\", \"Alice\", \"Laura\", \"Maria Alice\", \"Sophia\", \"Manuela\", \"Maitê\", \"Liz\", \"Cecília\", \"Isabella\", \"Luísa\", \"Eloá\", \"Heloísa\", \"Júlia\", \"Ayla\", \"Maria Luísa\", \"Isis\", \"Elisa\", \"Antonella\", \"Valentina\", \"Maya\", \"Maria Júlia\", \"Aurora\", \"Lara\", \"Maria Clara\", \"Lívia\", \"Esther\", \"Giovanna\", \"Sarah\", \"Maria Cecília\", \"Lorena\", \"Beatriz\", \"Rebecca\", \"Luna\", \"Olívia\", \"Maria Helena\", \"Mariana\", \"Isadora\", \"Melissa\", \"Maria\", \"Catarina\", \"Lavínia\", \"Alícia\", \"Maria Eduarda\", \"Agatha\", \"Ana Liz\", \"Yasmin\", \"Emanuelly\", \"Ana Clara\", \"Clara\", \"Ana Júlia\", \"Marina\", \"Stella\", \"Jade\", \"Maria Liz\", \"Ana Laura\", \"Maria Isis\", \"Ana Luísa\", \"Gabriela\", \"Alana\", \"Rafaela\", \"Vitória\", \"Isabelly\", \"Bella\", \"Milena\", \"Clarice\", \"Mirella\", \"Ana\", \"Emilly\", \"Betina\", \"Mariah\", \"Zoe\", \"Maria Vitória\", \"Nicole\", \"Laís\", \"Melina\", \"Bianca\", \"Louise\", \"Ana Beatriz\", \"Heloíse\", \"Malu\", \"Melinda\", \"Letícia\", \"Maria Valentina\", \"Chloe\", \"Maria Elisa\", \"Maria Heloísa\", \"Maria Laura\", \"Maria Fernanda\", \"Ana Cecília\", \"Hadassa\", \"Ana Vitória\", \"Diana\", \"Ayla Sophia\", \"Eduarda\", \"Ana Lívia\", \"Isabel\", \"Elis\", \"Pérola\", \"Joana\", \"Miguel\", \"Arthur\", \"Gael\", \"Théo\", \"Heitor\", \"Ravi\", \"Davi\", \"Bernardo\", \"Noah\", \"Gabriel\", \"Samuel\", \"Pedro\", \"Anthony\", \"Isaac\", \"Benício\", \"Benjamin\", \"Matheus\", \"Lucas\", \"Joaquim\", \"Nicolas\", \"Lucca\", \"Lorenzo\", \"Henrique\", \"João Miguel\", \"Rafael\", \"Henry\", \"Murilo\", \"Levi\", \"Guilherme\", \"Vicente\", \"Felipe\", \"Bryan\", \"Matteo\", \"Bento\", \"João Pedro\", \"Pietro\", \"Leonardo\", \"Daniel\", \"Gustavo\", \"Pedro Henrique\", \"João Lucas\", \"Emanuel\", \"João\", \"Caleb\", \"Davi Lucca\", \"Antônio\", \"Eduardo\", \"Enrico\", \"Caio\", \"José\", \"Enzo Gabriel\", \"Augusto\", \"Mathias\", \"Vitor\", \"Enzo\", \"Cauã\", \"Francisco\", \"Rael\", \"João Guilherme\", \"Thomas\", \"Yuri\", \"Yan\", \"Anthony Gabriel\", \"Oliver\", \"Otávio\", \"João Gabriel\", \"Nathan\", \"Davi Lucas\", \"Vinícius\", \"Theodoro\", \"Valentim\", \"Ryan\", \"Luiz Miguel\", \"Arthur Miguel\", \"João Vitor\", \"Léo\", \"Ravi Lucca\", \"Apollo\", \"Thiago\", \"Tomás\", \"Martin\", \"José Miguel\", \"Erick\", \"Liam\", \"Josué\", \"Luan\", \"Asafe\", \"Raul\", \"José Pedro\", \"Dominic\", \"Kauê\", \"Kalel\", \"Luiz Henrique\", \"Dom\", \"Davi Miguel\", \"Estevão\", \"Breno\", \"Davi Luiz\", \"Thales\", \"Israel\"];\r",
											"\r",
											"\r",
											"    var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
											"\r",
											"    return randomItem;\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"FirstName\", firstName());\r",
											"\r",
											"function lastName() {\r",
											"\r",
											"    var lastName = [\"Abreu\",\"Adães\",\"Adorno\",\"Aguiar\",\"Albuquerque\",\"Alcântara\",\"Aleluia\",\"Alencar\",\"Almeida\",\"Altamirano\",\"Alvarenga\",\"Álvares\",\"Alves\",\"Alvim\",\"Amaral\",\"Amigo\",\"Amor\",\"Amorim\",\"Anchieta\",\"Andrada\",\"Andrade\",\"André\",\"Andrioli\",\"Anes\",\"Anjos\",\"Antônio\",\"Antunes\",\"Anunciação\",\"Apolinário\",\"Aragão\",\"Araújo\",\"Arruda\",\"Ascensão\",\"Assis\",\"Auth\",\"Ayala\",\"Azeredo\",\"Azevedo\",\"Badu\",\"Baltar\",\"Baltazar\",\"Bandeira\",\"Barbaresco\",\"Barbosa\",\"Barreto\",\"Barros\",\"Barroso\",\"Baseggio\",\"Bastos\",\"Batista\",\"Bazarelo\",\"Beckmann\",\"Benjamin\",\"Bermudes\",\"Bernades\",\"Bernardes\",\"Bicalho\",\"Bispo\",\"Bizzo\",\"Bocaiuva\",\"Bolsonaro\",\"Borba\",\"Borborema\",\"Borges\",\"Borsoi\",\"Botelho\",\"Braga\",\"Bragança\",\"Brandão\",\"Brasil\",\"Brasiliense\",\"Brito\",\"Bruno\",\"Bruscato\",\"Bueno\",\"Cabral\",\"Café\",\"Caldas\",\"Camacho\",\"Camargo\",\"Caminha\",\"Camões\",\"Cândido\",\"Cardoso\",\"Carmo\",\"Carnaval\",\"Carneiro\",\"Carvalhal\",\"Carvalho\",\"Carvalhosa\",\"Castilho\",\"Castro\",\"Cauduro\",\"Cerejeira\",\"Chaves\",\"Cidade\",\"Coelho\",\"Coentrão\",\"Coimbra\",\"Conceição\",\"Constante\",\"Cordeiro\",\"Costa\",\"Cotrim\",\"Coutinho\",\"Couto\",\"Cruz\",\"Cunha\",\"Curado\",\"Curtinaz\",\"Dambros\",\"Dantas\",\"Delfino\",\"Dias\",\"Diegues\",\"Domingues\",\"Dominici\",\"Dorneles\",\"Dourado\",\"Duarte\",\"Dutra\",\"Eça\",\"Encarnação\",\"Esteves\",\"Evangelista\",\"Exaltação\",\"Fagundes\",\"Faleiros\",\"Falópio\",\"Falqueto\",\"Faria\",\"Farias\",\"Faro\",\"Feitosa\",\"Fernandes\",\"Ferrão\",\"Ferraz\",\"Ferreira\",\"Ferro\",\"Ferrolho\",\"Figo\",\"Figueira\",\"Figueiredo\",\"Figueiroa\",\"Fioravante\",\"Flores\",\"Fonseca\",\"Fontes\",\"Fortaleza\",\"França\",\"Freire\",\"Freitas\",\"Frota\",\"Furquim\",\"Furtado\",\"Gaia\",\"Galvão\",\"Gama\",\"Garcia\",\"Garrastazu\",\"Gato\",\"Generoso\",\"Gomes\",\"Gonçales\",\"Gonçalves\",\"Gonzaga\",\"Gouveia\",\"Guarato\",\"Guerreiro\",\"Guimarães\",\"Gusmão\",\"Henriques\",\"Hernandes\",\"Hidelfonso\",\"Hoffmann\",\"Holanda\",\"Homem\",\"Hora\",\"Hungria\",\"Idelfonso\",\"Igrejas\",\"Ildefonso\",\"Inácio\",\"Jardim\",\"Jesus\",\"Jordão\",\"Junqueira\",\"Klein\",\"Kremer\",\"Lacerda\",\"Lange\",\"Laubert\",\"Leitão\",\"Leite\",\"Leme\",\"Leonor\",\"Levy\",\"Libânio\",\"Lima\",\"Lins\",\"Lira\",\"Lisboa\",\"Locatelli\",\"Lochner\",\"Lopes\",\"Louzada\",\"Lutz\",\"Luz\",\"Macedo\",\"Machado\",\"Madureira\",\"Maduro\",\"Magalhães\",\"Mairinque\",\"Malafaia\",\"Malta\",\"Marinho\",\"Mariz\",\"Marques\",\"Martins\",\"Mascarenhas\",\"Massa\",\"Matos\",\"Maurício\",\"Medeiros\",\"Médici\",\"Meireles\",\"Mello\",\"Melo\",\"Mendes\",\"Mendonça\",\"Menezes\",\"Menino\"];\r",
											"\r",
											"    var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
											"\r",
											"    return randomItem\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"LastName\", lastName());\r",
											"\r",
											"pm.environment.set(\"nome\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user -  theFieldMustBe_a_string",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = [1, 2];\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - null name field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = null;\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - name field accepts more than 2.815 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = [\"rymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvr\"];\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user -  repeated name success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = [\"Variavel\"];\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - name field accepts special characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = [\"!@#$%&¨*()+{}^^:?/?]ª/*-*/+\"];\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register user - empty name field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameUser () {\r",
											"    \r",
											"    let nameUser = \"\";\r",
											"\r",
											"    let randomItem = nameUser[Math.floor(Math.random() * nameUser.length)];\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameUser())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek email is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).email)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek password is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).password)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek administrador is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).administrador)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"administrador\": \"{{administrador}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/usuarios/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"usuarios",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar usuário com email já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "E-mail já cadastrado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"administrador\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/usuarios",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usuarios"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"description": "Realizado testes manuais, com os metódos POST e PUT, no elemento (nome)."
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "{_id}",
					"item": [
						{
							"name": "Buscar produto por ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/produtos/Ig72XIMaVdHnt8MV",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"Ig72XIMaVdHnt8MV"
									]
								}
							},
							"response": [
								{
									"name": "Produto encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Produto não encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Excluir produto",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}produtos/fkXMw3HmcAoyyYj",
									"host": [
										"{{URL}}produtos"
									],
									"path": [
										"fkXMw3HmcAoyyYj"
									]
								},
								"description": "Não é permitido excluir produto que faz parte de carrinho."
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Nenhum registro excluído",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Produto faz parte de carrinho",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"idCarrinho\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Editar produto",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Mesa Retangular\",\n  \"preco\": \"25\",\n  \"descricao\": \"MDF\",\n  \"quantidade\": \"1\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/fkXMw3HmcAoyyYj",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"fkXMw3HmcAoyyYj"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado.\nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.\n"
							},
							"response": [
								{
									"name": "Alterado com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Manuals (names)",
					"item": [
						{
							"name": "List registered products",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/produtos/",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										""
									]
								}
							},
							"response": [
								{
									"name": "Lista de produtos",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/produtos?_id=<string>&nome=<string>&preco=<integer>&descricao=<string>&quantidade=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											],
											"query": [
												{
													"key": "_id",
													"value": "<string>"
												},
												{
													"key": "nome",
													"value": "<string>"
												},
												{
													"key": "preco",
													"value": "<integer>"
												},
												{
													"key": "descricao",
													"value": "<string>"
												},
												{
													"key": "quantidade",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"quantidade\": \"<number>\",\n  \"produtos\": [\n    {\n      \"nome\": \"<string>\",\n      \"preco\": \"<integer>\",\n      \"descricao\": \"<string>\",\n      \"quantidade\": \"<integer>\",\n      \"_id\": \"<string>\"\n    },\n    {\n      \"nome\": \"<string>\",\n      \"preco\": \"<integer>\",\n      \"descricao\": \"<string>\",\n      \"quantidade\": \"<integer>\",\n      \"_id\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Register product - sucess",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"Computador portátil\", \"Caneta esferográfica\", \"Caderno pautado\", \"Óculos de sol\", \"Fones de ouvido sem fio\", \"Cadeira ergonômica\", \"Televisão de tela plana\",\"Smartphone de última geração\", \"Mochila\", \"Máquina de café expresso\", \"Smartphone\", \"Notebook\", \"Televisor\", \"Máquina de Lavar Roupa\", \"Geladeira\", \"Forno\", \"Micro-ondas\", \"Cafeteira\", \"Aspirador de Pó\", \"Liquidificador\", \"Bicicleta\", \"Fones de Ouvido\", \"Relógio de Pulso\", \"Máquina de Café Expresso\", \"Cadeira de Escritório\", \"Tênis de Corrida\", \"Mala de Viagem\", \"Câmera Digital\", \"Console de Video Game\", \"Panela de Pressão\", \"Guarda-chuva\", \"Fones de Ouvido Bluetooth\", \"Teclado Mecânico para Jogos\", \"Câmera de Segurança Wi-Fi\", \"Robô\", \"Aspirador de Pó\", \"Monitor UltraWide\", \"Console de Video Game\", \"Smartwatch\", \"Impressora Multifuncional a Jato de Tinta\", \"Caixa de Som Bluetooth Portátil\", \"Mochila para Laptop\", \"Mouse sem Fio\", \"Auriculares\", \"Tablet Android\", \"Carregador\", \"Projetor HD\", \"Roteador\", \"Wi-Fi de Alta Velocidade\", \"Cadeira Gamer Ergonômica\", \"Hub USB 3.0\", \"Escova de Dentes Elétrica Inteligente\", \"Lâmpada Inteligente LED\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nameProduct\",nameProduct());\r",
											"\r",
											"\r",
											"function nameProductDescription () {\r",
											"    let nameProductDescription = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A8',  'A9', 'A10', 'B11', 'B12', 'B13', 'B14', 'B15', 'B16', 'B17', 'B18', 'B19', 'B20', 'C21', 'C22', 'C23', 'C24', 'C25', 'D26', 'C27', 'C28', 'C29', 'C30','D27', 'D28', 'D29', 'D30', 'E31', 'E32', 'E33', 'E34', 'E35', 'E36', 'E37', 'E38', 'E39', 'E40'];\r",
											"\r",
											"        let randomItem = nameProductDescription[Math.floor(Math.random() * nameProductDescription.length)]\r",
											"\r",
											"        return randomItem;\r",
											"\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nameProductDescription\",nameProductDescription());\r",
											"\r",
											"\r",
											"pm.environment.set(\"nome\", pm.variables.get(\"nameProduct\") + \" \" + pm.variables.get(\"nameProductDescription\"));\r",
											"\r",
											"\r",
											"pm.environment.set(\"preco\", pm.variables.replaceIn('{{$randomInt}}'))    \r",
											"\r",
											"function nameDescription () {\r",
											"    let nameDescription = ['Item de multiplas cores', 'Item com multiplas usabilidades', 'Item de qualidade', 'Item com design arrojado', 'Item ergonômico', 'Item com vários tamanhos', 'Item duvável', 'Item de ultima geração'];\r",
											"\r",
											"    let randomItem = nameDescription[Math.floor(Math.random() * nameDescription.length)];\r",
											"    \r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"descricao\", nameDescription())\r",
											"\r",
											"pm.environment.set(\"quantidade\",Math.floor(Math.random() *(500 * 1) + 1))\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - theFieldMust_be_a_string",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [1, 2, 3, 4, 6, 7, 8, 9, 10];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product -repeatedName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"Computador portátil\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - nullName_field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = null;\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - emptyName_field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [ ];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - nameFieldAcceptsSpecialCharacters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"!@#$%&¨*()+{}^^:?/?]ª/*-*/h+\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product -name field accepts more than 2.815 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"rcymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvr\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product -name field accepts more than 2.815 characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"rcymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvrrymnrçkebvokwmwlfvmldwfv ewvklmewji0vrmvko´gvmjgiv trbjv rko´vbgr bgrbjigbkd´lbvgrbj-grbrobmktrkgotrno-gtrnbjitrnbjo-trbo´trbnjtrbntrbntribntrjobtribntrubitrbjorobmrobmtrobmroijbmrojibmtrjobptrobkwbmtwibnrgneuinvequivnewivmewvtwvinvoqefnvekjçvnlefçvç~ewvçetpgij2trigjtr4i9gjrtgpmpevméiovnr2t9igti9gntbv´bpfmvewfçvçewtvbptrmbiog43gt4gtewtrvtrvtrgt4ggoyingoerifmuogmtigtngitoppdfoergj8gj489gmt4iog4gy9g59g29848929286283g9y2br9b1y8g18y92g89r2y1by92b9yh2y59h298y52g924g924g9352g65gy25h982y9h81y58h25yh8255yh255y*h98g293trgtr3kmgtimgi43mgo5gm5yimgi5-t@+%&rggvvrvrvvr\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - sucess",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"Computador portátil\", \"Caneta esferográfica\", \"Caderno pautado\", \"Óculos de sol\", \"Fones de ouvido sem fio\", \"Cadeira ergonômica\", \"Televisão de tela plana\",\"Smartphone de última geração\", \"Mochila\", \"Máquina de café expresso\", \"Smartphone\", \"Notebook\", \"Televisor\", \"Máquina de Lavar Roupa\", \"Geladeira\", \"Forno\", \"Micro-ondas\", \"Cafeteira\", \"Aspirador de Pó\", \"Liquidificador\", \"Bicicleta\", \"Fones de Ouvido\", \"Relógio de Pulso\", \"Máquina de Café Expresso\", \"Cadeira de Escritório\", \"Tênis de Corrida\", \"Mala de Viagem\", \"Câmera Digital\", \"Console de Video Game\", \"Panela de Pressão\", \"Guarda-chuva\", \"Fones de Ouvido Bluetooth\", \"Teclado Mecânico para Jogos\", \"Câmera de Segurança Wi-Fi\", \"Robô\", \"Aspirador de Pó\", \"Monitor UltraWide\", \"Console de Video Game\", \"Smartwatch\", \"Impressora Multifuncional a Jato de Tinta\", \"Caixa de Som Bluetooth Portátil\", \"Mochila para Laptop\", \"Mouse sem Fio\", \"Auriculares\", \"Tablet Android\", \"Carregador\", \"Projetor HD\", \"Roteador\", \"Wi-Fi de Alta Velocidade\", \"Cadeira Gamer Ergonômica\", \"Hub USB 3.0\", \"Escova de Dentes Elétrica Inteligente\", \"Lâmpada Inteligente LED\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct());\r",
											"\r",
											"pm.environment.set(\"preco\", pm.variables.replaceIn('{{$randomInt}}'))    \r",
											"\r",
											"function nameDescription () {\r",
											"    let nameDescription = ['Item de multiplas cores', 'Item com multiplas usabilidades', 'Item de qualidade', 'Item com design arrojado', 'Item ergonômico', 'Item com vários tamanhos', 'Item duvável', 'Item de ultima geração'];\r",
											"\r",
											"    let randomItem = nameDescription[Math.floor(Math.random() * nameDescription.length)];\r",
											"    \r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"descricao\", nameDescription())\r",
											"\r",
											"pm.environment.set(\"quantidade\",Math.floor(Math.random() *(500 * 1) + 1))\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - the field must be a string",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [1, 2, 3, 4, 6, 7, 8, 9, 10];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product -repeated name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"Computador portátil\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - null name field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = null;\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - empty name field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [ ];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Register product - name field accepts special characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function nameProduct () {\r",
											"    let nameProduct = [\"!@#$%&¨*()+{}^^:?/?]ª/*-*/h+\"];\r",
											"\r",
											"    let randomItem = nameProduct[Math.floor(Math.random() * nameProduct.length)];\r",
											"\r",
											"    return randomItem;\r",
											"}\r",
											"\r",
											"pm.environment.set(\"nome\",nameProduct())\r",
											"\r",
											"pm.test (\"Salvar Id aleatorio\", function(){\r",
											"    let id = pm.response.json()\r",
											"\r",
											"    id = id[Math.floor(Math.random() * id.length)]\r",
											"\r",
											"    pm.environment.set(\"id\", id._id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Chek nome is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).nome)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek preco is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).preco)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek descricao is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).descricao)\r",
											"\r",
											"});\r",
											"pm.test(\"Chek quantidade is True\", function () {\r",
											"    pm.expect(pm.variables.get(\"undefined\")). to.eql(JSON.parse(responseBody).quantidade)\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nome\": \"{{nome}}\",\n    \"preco\": \"{{preco}}\",\n    \"descricao\": \"{{descricao}}\",\n    \"quantidade\": \"{{quantidade}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/produtos/{{id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"produtos",
										"{{id}}"
									]
								},
								"description": "Não é permitido cadastrar produto com nome já utilizado"
							},
							"response": [
								{
									"name": "Cadastro com sucesso",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Já existe produto com esse nome",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Rota exclusiva para administradores (`administrador = true`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/produtos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"produtos"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					],
					"description": "Realizado testes manuais, com os metódos POST e PUT, no elemento (nome)."
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Carts",
			"item": [
				{
					"name": "{_id}",
					"item": [
						{
							"name": "Search cart by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										":_id"
									],
									"variable": [
										{
											"key": "_id",
											"value": "qbMqntef4iTOwWfg"
										}
									]
								}
							},
							"response": [
								{
									"name": "Carrinho encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"produtos\": [\n    {\n      \"idProduto\": \"<string>\",\n      \"quantidade\": \"<integer>\",\n      \"precoUnitario\": \"<integer>\"\n    },\n    {\n      \"idProduto\": \"<string>\",\n      \"quantidade\": \"<integer>\",\n      \"precoUnitario\": \"<integer>\"\n    }\n  ],\n  \"precoTotal\": \"<integer>\",\n  \"quantidadeTotal\": \"<integer>\",\n  \"idUsuario\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
								},
								{
									"name": "Carrinho não encontrado",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/:_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												":_id"
											],
											"variable": [
												{
													"key": "_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Complete purchase",
					"item": [
						{
							"name": "Delete cart",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/concluir-compra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										"concluir-compra"
									]
								},
								"description": "Ao concluir uma compra o carrinho é excluído.\nO carrinho excluído será o vinculado ao usuário do `token` utilizado.\n"
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/concluir-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"concluir-compra"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Cancel purchase",
					"item": [
						{
							"name": "Delete cart and return products to stock",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos",
										"cancelar-compra"
									]
								},
								"description": "Ao cancelar uma compra o carrinho é excluído e o estoque dos produtos desse carrinho é reabastecido.\nO carrinho excluído será o vinculado ao usuário do `token` utilizado.\n"
							},
							"response": [
								{
									"name": "Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Token ausente, inválido ou expirado",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carrinhos",
												"cancelar-compra"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List registered carts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/carrinhos/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"carrinhos",
								""
							],
							"query": [
								{
									"key": "_id",
									"value": "<string>",
									"disabled": true
								},
								{
									"key": "precoTotal",
									"value": "<integer>",
									"disabled": true
								},
								{
									"key": "quantidadeTotal",
									"value": "<integer>",
									"disabled": true
								},
								{
									"key": "idUsuario",
									"value": "<string>",
									"disabled": true
								}
							]
						},
						"description": "Os carrinhos retornados são únicos por usuário"
					},
					"response": [
						{
							"name": "Cart list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carrinhos?_id=<string>&precoTotal=<integer>&quantidadeTotal=<integer>&idUsuario=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carrinhos"
									],
									"query": [
										{
											"key": "_id",
											"value": "<string>"
										},
										{
											"key": "precoTotal",
											"value": "<integer>"
										},
										{
											"key": "quantidadeTotal",
											"value": "<integer>"
										},
										{
											"key": "idUsuario",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"quantidade\": \"<number>\",\n  \"carrinhos\": [\n    {\n      \"produtos\": [\n        {\n          \"idProduto\": \"<string>\",\n          \"quantidade\": \"<integer>\",\n          \"precoUnitario\": \"<integer>\"\n        },\n        {\n          \"idProduto\": \"<string>\",\n          \"quantidade\": \"<integer>\",\n          \"precoUnitario\": \"<integer>\"\n        }\n      ],\n      \"precoTotal\": \"<integer>\",\n      \"quantidadeTotal\": \"<integer>\",\n      \"idUsuario\": \"<string>\",\n      \"_id\": \"<string>\"\n    },\n    {\n      \"produtos\": [\n        {\n          \"idProduto\": \"<string>\",\n          \"quantidade\": \"<integer>\",\n          \"precoUnitario\": \"<integer>\"\n        },\n        {\n          \"idProduto\": \"<string>\",\n          \"quantidade\": \"<integer>\",\n          \"precoUnitario\": \"<integer>\"\n        }\n      ],\n      \"precoTotal\": \"<integer>\",\n      \"quantidadeTotal\": \"<integer>\",\n      \"idUsuario\": \"<string>\",\n      \"_id\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Register cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"rgtybgvfsvsrvgrbthb\",\n    \"quantidade\": \"1\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/carrinhos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"carrinhos"
							]
						},
						"description": "O carrinho é vinculado ao usuário do token enviado no header `Authorization`, sendo possível cadastrar apenas 1 carrinho por usuário.\nAo cadastrar carrinho com sucesso é feita a redução da quantidade no cadastro de cada produto inserido no carrinho.\n"
					},
					"response": [
						{
							"name": "Cadastro com sucesso",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"RBTYBTEVRE3Y\",\n    \"quantidade\": \"1\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/carrinhos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"_id\": \"<string>\"\n}"
						},
						{
							"name": "Algo deu errado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"<string>\",\n    \"quantidade\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/carrinhos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Token ausente, inválido ou expirado",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"produtos\": {\n    \"idProduto\": \"<string>\",\n    \"quantidade\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/carrinhos",
									"host": [
										"{{URL}}"
									],
									"path": [
										"carrinhos"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "//localhost:3000",
			"disabled": true
		}
	]
}